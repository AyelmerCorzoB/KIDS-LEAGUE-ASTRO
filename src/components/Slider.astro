---
import NewsCard from "./NewsCard.astro";

const newsItems = [
  {
    title: "¡Nuevo patrocinador se une a KidsLeague!",
    description: `
      La liga de fútbol infantil ha dado
      un gran paso al asegurar el
      patrocinio de una reconocida
      marca internacional.
      Descubre quién es el nuevo aliado
      de la liga.
    `,
    imageUrl: "/Images/noticia1.jpg",
  },
  {
    title: "Gran final de la temporada: ¡Los equipos se preparan para el partido decisivo!",
    description: `
      Los equipos están listos para
      enfrentarse en el partido más
      esperado del año. Las emociones
      están al límite, y la final promete
      sorpresas para todos los
      asistentes. Conoce todos los
      detalles de este emocionante
      encuentro.
      ¡Mira más!
    `,
    imageUrl: "/Images/noticia2.jpg",
  },
  {
    title: "Entrenamientos especiales para mejorar el rendimiento",
    description: `
      La liga ha implementado nuevos
      programas de entrenamiento para
      que los jugadores mejoren sus
      habilidades y estén en su mejor
      forma para la próxima temporada.
    `,
    imageUrl: "/Images/noticia3.jpg",
  },
  {
    title: "Inscripciones abiertas para la próxima temporada",
    description: `
      ¡No te quedes fuera! Las
      inscripciones para la próxima
      temporada ya están abiertas.
      Asegura tu lugar en la liga y
      vive la emoción del fútbol infantil.
    `,
    imageUrl: "/Images/noticia4.jpg",
  },
];
---

<section class="relative my-16 px-4 pt-10 mx-auto max-w-2xl 2xl:max-w-4xl flex flex-col items-center justify-center min-h-[600px] 2xl:min-h-[800px]">
  <h2 class="text-2xl md:text-3xl 2xl:text-4xl text-center text-white font-bold mb-8 2xl:mb-12">ÚLTIMAS NOTICIAS</h2>
  
  <!-- Carrusel -->
  <div id="news-carousel" class="relative w-full" data-carousel="slide">
    <!-- Contenedor del carrusel -->
    <div class="relative overflow-hidden rounded-lg mx-auto max-w-lg 2xl:max-w-2xl h-[400px] 2xl:h-[500px]">
      {newsItems.map((news, index) => (
        <div 
          class={`absolute inset-0 w-full h-full transition-opacity duration-700 ease-in-out flex items-center justify-center ${index === 0 ? 'opacity-100' : 'opacity-0 pointer-events-none'}`} 
          data-carousel-item={index === 0 ? 'active' : ''}
        >

          <div class="rounded-lg bg-green-700 shadow-lg overflow-hidden w-full h-full flex flex-col">
            <div class="w-full h-48 2xl:h-64 overflow-hidden">
              <img 
                src={news.imageUrl || "/placeholder.svg"} 
                alt={news.title} 
                class="w-full h-full object-cover"
              />
            </div>
            <div class="p-4 2xl:p-6 flex-grow flex flex-col">
              <h3 class="text-xl 2xl:text-3xl font-bold mb-2 text-white">{news.title}</h3>
              <p class="text-gray-300 text-sm 2xl:text-2xl mb-4">{news.description}</p>
              <a href="#" class="mt-auto mb-2 inline-block px-4 py-2 bg-orange-500 text-white rounded hover:bg-orange-600 transition-colors text-sm 2xl:text-base">
                Leer más
              </a>
            </div>
          </div>
        </div>
      ))}
    </div>

    <!-- Indicadores del carrusel -->
    <div class="absolute z-30 flex -translate-x-1/2 -bottom-12 left-1/2 space-x-3 rtl:space-x-reverse">
      {newsItems.map((_, index) => (
        <button
          type="button"
          class={`w-3 h-3 2xl:w-4 2xl:h-4 rounded-full ${index === 0 ? 'bg-white' : 'bg-white/50'} hover:bg-white transition-all duration-300`}
          aria-current={index === 0 ? "true" : "false"}
          aria-label={`Noticia ${index + 1}`}
          data-carousel-slide-to={index}
        ></button>
      ))}
    </div>

    <!-- Controles del carrusel -->
    <button
      type="button"
      class="absolute top-0 start-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none"
      data-carousel-prev
      aria-label="Ver noticia anterior"
    >
      <span class="inline-flex items-center justify-center w-10 h-10 2xl:w-12 2xl:h-12 rounded-full bg-white/30 group-hover:bg-white/50 group-focus:ring-4 group-focus:ring-white group-focus:outline-none">
        <svg
          class="w-4 h-4 2xl:w-5 2xl:h-5 text-white rtl:rotate-180"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 6 10"
        >
          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 1 1 5l4 4"/>
        </svg>
        <span class="sr-only">Anterior</span>
      </span>
    </button>
    <button
      type="button"
      class="absolute top-0 end-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none"
      data-carousel-next
      aria-label="Ver siguiente noticia"
    >
      <span class="inline-flex items-center justify-center w-10 h-10 2xl:w-12 2xl:h-12 rounded-full bg-white/30 group-hover:bg-white/50 group-focus:ring-4 group-focus:ring-white group-focus:outline-none">
        <svg
          class="w-4 h-4 2xl:w-5 2xl:h-5 text-white rtl:rotate-180"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 6 10"
        >
          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
        </svg>
        <span class="sr-only">Siguiente</span>
      </span>
    </button>
  </div>
</section>
<script>
  // Script para manejar el carrusel
  document.addEventListener('DOMContentLoaded', function() {
    initCarousel();
  });

  function initCarousel() {
    const carousel = document.getElementById("news-carousel");
    if (!carousel) return;
    
    const items = carousel.querySelectorAll("[data-carousel-item]");
    const indicators = carousel.querySelectorAll("[data-carousel-slide-to]");
    const prevButton = carousel.querySelector("[data-carousel-prev]");
    const nextButton = carousel.querySelector("[data-carousel-next]");

    let currentIndex = 0;
    let interval: number | null = null;
    const autoPlayDelay = 5000; // 5 segundos entre slides

    const showItem = (index: number) => {
      // Ocultar todos los items
      items.forEach((item, i) => {
        item.classList.remove('opacity-100');
        item.classList.add('opacity-0', 'pointer-events-none');
        item.setAttribute('data-carousel-item', '');
        
        // Actualizar indicadores
        if (indicators[i]) {
          indicators[i].setAttribute('aria-current', 'false');
          indicators[i].classList.remove('bg-white');
          indicators[i].classList.add('bg-white/50');
        }
      });

      // Mostrar el item actual
      if (items[index]) {
        items[index].classList.remove('opacity-0', 'pointer-events-none');
        items[index].classList.add('opacity-100');
        items[index].setAttribute('data-carousel-item', 'active');
      }

      // Actualizar el indicador actual
      if (indicators[index]) {
        indicators[index].setAttribute('aria-current', 'true');
        indicators[index].classList.remove('bg-white/50');
        indicators[index].classList.add('bg-white');
      }

      currentIndex = index;
    };

    const nextItem = () => {
      const newIndex = (currentIndex + 1) % items.length;
      showItem(newIndex);
    };

    const prevItem = () => {
      const newIndex = (currentIndex - 1 + items.length) % items.length;
      showItem(newIndex);
    };

    // Configurar los indicadores
    indicators.forEach((indicator, index) => {
      indicator.addEventListener("click", () => {
        resetAutoPlay();
        showItem(index);
      });
    });

    // Configurar los botones de navegación
    if (prevButton) {
      prevButton.addEventListener("click", () => {
        resetAutoPlay();
        prevItem();
      });
    }
    
    if (nextButton) {
      nextButton.addEventListener("click", () => {
        resetAutoPlay();
        nextItem();
      });
    }

    // Iniciar autoplay
    const startAutoPlay = () => {
      stopAutoPlay();
      interval = setInterval(nextItem, autoPlayDelay);
    };

    const stopAutoPlay = () => {
      if (interval) {
        clearInterval(interval);
        interval = null;
      }
    };

    const resetAutoPlay = () => {
      stopAutoPlay();
      startAutoPlay();
    };

    // Pausar autoplay cuando el usuario interactúa con el carrusel
    carousel.addEventListener('mouseenter', stopAutoPlay);
    carousel.addEventListener('mouseleave', startAutoPlay);
    
    // Pausar autoplay cuando la página no está visible
    document.addEventListener('visibilitychange', () => {
      if (document.hidden) {
        stopAutoPlay();
      } else {
        startAutoPlay();
      }
    });

    // Inicializar el carrusel
    showItem(0);
    startAutoPlay();
  }

  // Para compatibilidad con Astro View Transitions
  document.addEventListener('astro:page-load', function() {
    initCarousel();
  });

  // Para asegurarnos que funcione en todos los casos
  window.addEventListener('load', function() {
    initCarousel();
  });
</script>

<style>
  /* Estilos adicionales para mejorar la apariencia y transiciones */
  [data-carousel-item] {
    transition: opacity 0.7s ease;
    position: absolute;
    width: 100%;
    height: 100%;
  }

  /* Soporte para prefers-reduced-motion */
  @media (prefers-reduced-motion: reduce) {
    [data-carousel-item] {
      transition: none;
    }
  }
  
  /* Ajustar posición de los controles para mejor visibilidad */
  [data-carousel-prev], [data-carousel-next] {
    margin-top: -2rem;
  }
  
  /* Ajustar posición de los indicadores */
  .slider-pagination {
    bottom: -1.5rem;
  }
  
  /* Ajustes para pantallas 2xl */
  @media (min-width: 1536px) {
    #news-carousel .relative {
      height: 600px !important;
    }
  }
</style>

