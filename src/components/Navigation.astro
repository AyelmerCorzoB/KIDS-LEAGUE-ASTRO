---
import Rectangulo from "./bloques/Rectangulo.astro";

const links = [
  { href: "/", text: "INICIO" },
  { href: "/about", text: "SOBRE NOSOTROS" },
  { href: "/events", text: "EVENTOS" },
  { href: "/clasificaciones", text: "CLASIFICACIONES" },
  { href: "/arbitrospage", text: "ARBITROS" },
  { href: "/ganadores", text: "GANADORES" },
  { href: "/login", text: "INGRESAR" },
];

const currentPath = new URL(Astro.request.url).pathname;
const excludedPaths = ["/", "/index", "/arbitrospage"];
const shouldHideRectangulo = excludedPaths.includes(currentPath);
const isLoggedIn = typeof window !== 'undefined' && localStorage.getItem('userLoggedIn') === 'true';
---

{!shouldHideRectangulo && <Rectangulo />}

<header
  class="font-bold w-full h-[12vh] absolute z-20 flex justify-between items-center px-4 md:px-5"
>
  <a href="/" class="md:hidden text-white font-bold text-[1.7rem]">
    <span class="text-yellow-500">KIDS</span>LEAGUE
  </a>

  <button
    id="menu-toggle"
    class="block md:hidden absolute right-2 text-yellow-500 focus:outline-none z-30"
    aria-label="Toggle menu"
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="h-10 w-10"
      fill="none"
      viewBox="0 0 24 24"
      stroke="currentColor"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M4 6h16M4 12h16M4 18h16"></path>
    </svg>
  </button>

  <nav class="hidden md:block flex-1">
    <ul class="flex items-center">
      {
        links.slice(0, -1).map((link) => (
          <li>
            <a
              href={link.href}
              class={`no-underline mr-[1.2vw] text-[0.9rem] transition-all duration-200 ${
                currentPath === link.href
                  ? "text-yellow-400 text-base"
                  : "text-white hover:text-yellow-400 hover:text-base"
              }`}
            >
              {link.text}
            </a>
          </li>
        ))
      }
      {isLoggedIn ? (
        <button
          id="logout-button"
          class="absolute right-10 bg-red-500 text-white border-2 border-white rounded-full w-44 h-12 flex justify-center items-center text-[24px] font-bold ml-auto hover:bg-red-600 transition-colors duration-200 cursor-pointer"
        >
          CERRAR SESIÃ“N
        </button>
      ) : (
        <a
          href="/login"
          class="absolute right-10 bg-orange-500 text-white border-2 border-white rounded-full w-44 h-12 flex justify-center items-center text-[24px] font-bold ml-auto hover:bg-orange-600 transition-colors duration-200"
        >
          INGRESAR
        </a>
      )}
    </ul>
  </nav>

  <!-- Mobile menu -->
  <div
    id="mobile-menu"
    class="fixed inset-0 bg-green-700 z-50 hidden flex-col justify-center items-center"
  >
    <button
      id="close-menu"
      class="absolute top-4 right-4 text-white p-2"
      aria-label="Close menu"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-8 w-8"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>

    <ul class="flex flex-col items-center space-y-6">
      {
        links.slice(0, -1).map((link) => (
          <li>
            <a
              href={link.href}
              class={`no-underline text-xl transition-all duration-200 ${
                currentPath === link.href
                  ? "text-yellow-400"
                  : "text-white hover:text-yellow-400"
              }`}
            >
              {link.text}
            </a>
          </li>
        ))
      }
      <li class="mt-8">
        <a
          href="/login"
          class="bg-orange-500 text-white border-2 border-white rounded-full w-44 h-12 flex justify-center items-center text-[24px] font-bold hover:bg-orange-600 transition-colors duration-200"
        >
          INGRESAR
        </a>
      </li>
    </ul>
  </div>
</header>

<script is:inline>
function setupMobileMenu() {
    const menuToggle = document.getElementById("menu-toggle");
    const closeMenu = document.getElementById("close-menu");
    const mobileMenu = document.getElementById("mobile-menu");

    if (!menuToggle || !closeMenu || !mobileMenu) {
      console.error("Menu elements not found");
      return;
    }

    const openMenu = () => {
      mobileMenu.classList.remove("hidden");
      mobileMenu.classList.add("flex");
      document.body.style.overflow = "hidden";
    };

    const closeMenuHandler = () => {
      mobileMenu.classList.add("hidden");
      mobileMenu.classList.remove("flex");
      document.body.style.overflow = "";
    };

    menuToggle.addEventListener("click", openMenu);
    menuToggle.addEventListener("touchend", (e) => {
      e.preventDefault();
      openMenu();
    });

    closeMenu.addEventListener("click", closeMenuHandler);
    closeMenu.addEventListener("touchend", (e) => {
      e.preventDefault();
      closeMenuHandler();
    });

    const menuLinks = mobileMenu.querySelectorAll("a");
    menuLinks.forEach((link) => {
      link.addEventListener("click", closeMenuHandler);
    });
  }

  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", setupMobileMenu);
  } else {
    setupMobileMenu();
  }

  document.addEventListener("astro:page-load", setupMobileMenu);
  function setupLogout() {
    const logoutButton = document.getElementById("logout-button");
    const logoutButtonMobile = document.getElementById("logout-button-mobile");

    const logout = () => {
      localStorage.removeItem('userLoggedIn');
      localStorage.removeItem('username');
      window.location.href = "/";
    };

    if (logoutButton) {
      logoutButton.addEventListener("click", logout);
    }

    if (logoutButtonMobile) {
      logoutButtonMobile.addEventListener("click", logout);
    }
  }

  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", () => {
      setupMobileMenu();
      setupLogout();
    });
  } else {
    setupMobileMenu();
    setupLogout();
  }

  document.addEventListener("astro:page-load", () => {
    setupMobileMenu();
    setupLogout();
  });
</script>
