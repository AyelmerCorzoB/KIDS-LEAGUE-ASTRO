---
import Rectangulo from "./bloques/Rectangulo.astro";
const links = [
  { href: "/", text: "INICIO" },
  { href: "/about", text: "SOBRE NOSOTROS" },
  { href: "/events", text: "EVENTOS" },
  { href: "/clasificaciones", text: "CLASIFICACIONES" },
  { href: "/arbitrospage", text: "ARBITROS" },
  { href: "/ganadores", text: "GANADORES" },
  { href: "/login" },
];

const currentPath = new URL(Astro.request.url).pathname;

const excludedPaths = ["/", "/index", "/arbitrospage"];

const shouldHideRectangulo = excludedPaths.includes(currentPath);
---

<!-- Mostrar Rectangulo solo si no estamos en una de las rutas excluidas -->{
  !shouldHideRectangulo && <Rectangulo />
}
<header
  class="font-bold w-full h-[12vh] absolute z-20 flex justify-between items-center px-4 md:px-5"
>
  <a href="/" class="md:hidden text-white font-bold text-[1.7rem]"><span class="text-yellow-500">KIDS</span>LEAGUE</a>
  <div class="block md:hidden absolute right-2">
    <button id="menu-toggle" class="text-yellow-500 focus:outline-none">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-10 w-10"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M4 6h16M4 12h16M4 18h16"></path>
      </svg>
    </button>
  </div>

  <nav class="hidden md:block flex-1">
    <ul class="flex items-center">
      {
        links.map((link) => (
          <li>
            <a
              href={link.href}
              class={`no-underline mr-[1.2vw] text-[0.9rem] transition-all duration-200 ${
                currentPath === link.href
                  ? "text-yellow-400 text-base"
                  : "text-white hover:text-yellow-400 hover:text-base"
              }`}
            >
              {link.text}
            </a>
          </li>
        ))
      }
      <button
        class="absolute right-10 bg-orange-500 text-white border-2 border-white rounded-full w-44 h-12 flex justify-center items-center text-[24px] font-bold ml-auto hover:bg-orange-600 transition-colors duration-200"
        onclick="location.href='login'"
      >
        INGRESAR
      </button>
    </ul>
  </nav>

  <!-- Mobile menu (hidden by default) -->
  <div
    id="mobile-menu"
    class="fixed inset-0 bg-green-700 z-50 hidden flex-col justify-center items-center"
  >
    <button id="close-menu" class="absolute top-4 right-4 text-white">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>

    <ul class="flex flex-col items-center space-y-6">
      {
        links.map((link) => (
          <li>
            <a
              href={link.href}
              class={`no-underline text-xl transition-all duration-200 ${
                currentPath === link.href
                  ? "text-yellow-400"
                  : "text-white hover:text-yellow-400"
              }`}
            >
              {link.text}
            </a>
          </li>
        ))
      }
      <li class="mt-8">
        <button
          class="bg-orange-500 text-white border-2 border-white rounded-full w-44 h-12 flex justify-center items-center text-[24px] font-bold hover:bg-orange-600 transition-colors duration-200"
          onclick="location.href='login'"
        >
          INGRESAR
        </button>
      </li>
    </ul>
  </div>
</header>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const menuToggle = document.getElementById("menu-toggle");
    const closeMenu = document.getElementById("close-menu");
    const mobileMenu = document.getElementById("mobile-menu");

    menuToggle?.addEventListener("click", () => {
      mobileMenu?.classList.remove("hidden");
      mobileMenu?.classList.add("flex");
      document.body.style.overflow = "hidden";
    });

    closeMenu?.addEventListener("click", () => {
      mobileMenu?.classList.add("hidden");
      mobileMenu?.classList.remove("flex");
      document.body.style.overflow = "";
    });
  });
</script>
